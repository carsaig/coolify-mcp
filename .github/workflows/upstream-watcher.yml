name: Upstream Watcher (Notification Only)

on:
  schedule:
    - cron: '0 */12 * * *'  # Every 12 hours
  workflow_dispatch:

permissions:
  issues: write

jobs:
  watch:
    runs-on: ubuntu-latest
    steps:
      - name: Check upstream
        id: check
        run: |
          # Get upstream latest
          upstream=$(curl -s https://api.github.com/repos/StuMason/coolify-mcp/releases/latest | jq -r '.tag_name // "none"')
          
          # Get our current 
          current=$(curl -s https://api.github.com/repos/${{ github.repository }}/releases/latest | jq -r '.tag_name // "none"')
          
          echo "Current: $current"
          echo "Upstream: $upstream"
          
          if [ "$current" != "$upstream" ] && [ "$upstream" != "none" ]; then
            echo "UPDATE_AVAILABLE=true" >> $GITHUB_ENV
            echo "NEW_VERSION=$upstream" >> $GITHUB_ENV
          fi

      - name: Create notification issue
        if: env.UPDATE_AVAILABLE == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const newVersion = process.env.NEW_VERSION;
            
            // Check if issue already exists
            const issues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: 'upstream-update'
            });
            
            const existsAlready = issues.data.some(issue => 
              issue.title.includes(newVersion)
            );
            
            if (!existsAlready) {
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: `ðŸš¨ Upstream Update: ${newVersion}`,
                body: `## New upstream version available!
                
            **New Version**: \`${newVersion}\`
            **Upstream**: https://github.com/StuMason/coolify-mcp/releases/tag/${newVersion}
            
            ### Manual Steps:
            1. Review the upstream changes
            2. Update your source code if needed  
            3. Run the "Simple Docker Build" workflow manually
            
            ### Quick Actions:
            - [View upstream release](https://github.com/StuMason/coolify-mcp/releases/tag/${newVersion})
            - [Run build workflow](../../actions/workflows/ultra-simple-workflow.yml)
            
            **No npm audit hell - just clean notifications!** âœ¨`,
                labels: ['upstream-update']
              });
            }

      - name: Summary
        run: |
          echo "## ðŸ‘€ Upstream Watch Complete" >> $GITHUB_STEP_SUMMARY
          if [ "$UPDATE_AVAILABLE" == "true" ]; then
            echo "ðŸš¨ **New version available**: $NEW_VERSION" >> $GITHUB_STEP_SUMMARY
            echo "Check Issues tab for details!" >> $GITHUB_STEP_SUMMARY
          else
            echo "âœ… **Up to date**" >> $GITHUB_STEP_SUMMARY
          fi
