name: Sync & Build coolify-mcp (with strict audit)

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Optional semver override (e.g. v1.2.3)'
        required: false
        type: string
  schedule:
    - cron: '0 */6 * * *'

permissions:
  contents: write
  packages: write

jobs:
  audit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install dependencies
        run: npm ci

      - name: Run audit-ci (critical only, allowlist config)
        run: npx audit-ci@^7 --config ./audit-ci.jsonc
        env:
          CI: true

  sync_and_build:
    needs: audit
    runs-on: ubuntu-latest
    outputs:
      built_tag: ${{ steps.semver.outputs.full }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Add upstream remote & fetch tags
        run: |
          git remote add upstream https://github.com/StuMason/coolify-mcp.git
          git fetch upstream --tags

      - name: Determine version tag
        id: desired
        run: |
          if [ -n "${{ github.event.inputs.version }}" ]; then
            tag="${{ github.event.inputs.version }}"; using_override=true
          else
            tag=$(git ls-remote --tags upstream \
              | grep -E 'refs/tags/v[0-9]+\.[0-9]+\.[0-9]+$' \
              | sort -V | tail -n1 | sed 's#.*/##')
            using_override=false
          fi
          if [ -z "$tag" ]; then
            echo "No valid semver tag foundâ€”exiting."
            exit 0
          fi
          echo "tag=$tag" >> $GITHUB_OUTPUT
          echo "using_override=$using_override" >> $GITHUB_OUTPUT

      - name: Validate semver
        id: semver
        uses: matt-usurp/validate-semver@v2
        with:
          version: ${{ steps.desired.outputs.tag }}

      - name: Skip prerelease
        if: steps.semver.outputs.prerelease != ''
        run: echo "Skipping prerelease: ${{ steps.semver.outputs.full }}" && exit 0

      - name: Validate override tag exists
        if: steps.desired.outputs.using_override == 'true'
        run: |
          if ! git show-ref --tags | grep -q "${{ steps.desired.outputs.tag }}"; then
            echo "Override tag not found" >&2
            exit 1
          fi

      - name: Compare HEAD vs target
        id: check
        run: |
          t=$(git rev-list -n1 "${{ steps.desired.outputs.tag }}")
          c=$(git rev-parse HEAD)
          echo "up_to_date=$([ "$c" = "$t" ] && echo true || echo false)" >> $GITHUB_OUTPUT

      - name: Sync & tag if outdated
        if: steps.check.outputs.up_to_date == 'false'
        run: |
          git checkout main
          git reset --hard "${{ steps.desired.outputs.tag }}"
          git push origin main --force
          git tag "${{ steps.desired.outputs.tag }}"
          git push origin "${{ steps.desired.outputs.tag }}"

      - name: Already synced skip
        if: steps.check.outputs.up_to_date == 'true'
        run: echo "Already at tag ${{ steps.desired.outputs.tag }}"

      - name: Login GHCR
        if: steps.check.outputs.up_to_date == 'false'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push Docker image
        if: steps.check.outputs.up_to_date == 'false'
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/coolify-mcp:${{ steps.semver.outputs.full }}
            ghcr.io/${{ github.repository_owner }}/coolify-mcp:latest

  cleanup:
    needs: sync_and_build
    if: ${{ github.event_name == 'schedule' }}
    runs-on: ubuntu-latest
    steps:
      - name: Cleanup GHCR old images
        uses: quartx-analytics/ghcr-cleaner@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          owner-type: user
          repository-owner: ${{ github.repository_owner }}
          repository-name: ${{ github.repository }}
          package-name: coolify-mcp
          delete-untagged: true
          keep-at-most: 5
          filter-tags: 'v*'
          skip-tags: 'latest'
