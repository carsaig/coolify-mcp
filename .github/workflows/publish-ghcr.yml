name: Sync upstream release, build & cleanup GHCR

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Optionally override tag to build (semver or full tag)'
        required: false
        type: string
  schedule:
    - cron: '0 */6 * * *'

permissions:
  contents: write
  packages: write

jobs:
  sync_and_build:
    runs-on: ubuntu-latest
    outputs:
      built_tag: ${{ steps.semver.outputs.full }}
    steps:
      - name: Checkout repo with full history
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Add upstream remote and fetch tags
        run: |
          git remote add upstream https://github.com/StuMason/coolify-mcp.git
          git fetch upstream --tags

      - name: Determine desired version tag
        id: desired
        run: |
          if [ -n "${{ github.event.inputs.version }}" ]; then
            echo "using_override=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
            echo "tag=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            latest=$(git ls-remote --tags upstream | grep -E 'refs/tags/v[0-9]+\.[0-9]+\.[0-9]+$' | sort -V | tail -n1 | sed 's#.*/##')
            echo "using_override=false" >> $GITHUB_OUTPUT
            echo "tag=$latest" >> $GITHUB_OUTPUT
          fi
          echo "selected_tag=${{ steps.desired.outputs.tag }}"

      - name: Validate semantic version format
        id: semver
        uses: matt-usurp/validate-semver@v2
        with:
          version: ${{ steps.desired.outputs.tag }}
        # aborts if invalid

      - name: Check if tag matches stable semver (no prerelease)
        if: steps.semver.outputs.prerelease != ''
        run: echo "Skipped prerelease version ${{ steps.semver.outputs.full }}" && exit 1

      - name: Check if fork needs update
        id: check
        run: |
          current=$(git rev-parse HEAD)
          target=$(git rev-list -n 1 ${{ steps.semver.outputs.full }})
          if [ "$current" = "$target" ]; then
            echo "up_to_date=true" >> $GITHUB_OUTPUT
          else
            echo "up_to_date=false" >> $GITHUB_OUTPUT
          fi

      - name: Sync fork and tag
        if: steps.check.outputs.up_to_date == 'false'
        run: |
          git checkout main
          git reset --hard ${{ steps.semver.outputs.full }}
          git push origin main --force
          git tag ${{ steps.semver.outputs.full }}
          git push origin ${{ steps.semver.outputs.full }}

      - name: Build and push Docker image to GHCR
        if: steps.check.outputs.up_to_date == 'false'
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/coolify-mcp:${{ steps.semver.outputs.full }}
            ghcr.io/${{ github.repository_owner }}/coolify-mcp:latest

  cleanup:
    needs: sync_and_build
    if: ${{ github.event_name == 'schedule' }}
    runs-on: ubuntu-latest
    steps:
      - name: Cleanup old GHCR images
        uses: quartx-analytics/ghcr-cleaner@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          owner-type: user
          repository-owner: ${{ github.repository_owner }}
          repository-name: ${{ github.repository }}
          package-name: coolify-mcp
          delete-untagged: true
          keep-at-most: 5
          filter-tags: 'v*'
          skip-tags: 'latest'
